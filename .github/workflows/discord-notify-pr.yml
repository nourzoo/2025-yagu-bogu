name: Discord PR Notification

on:
  pull_request:
    types: [ review_requested, opened, reopened, ready_for_review ]

jobs:
  notify:
    # Draft PR 제외
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest

    steps:
      - name: Decide webhook by base branch
        id: route
        run: |
          BASE="${{ github.event.pull_request.base.ref }}"

          # 브랜치 → 웹훅 매핑
          case "$BASE" in
            dev-be) WEBHOOK="${{ secrets.DISCORD_WEBHOOK_BE }}";;
            dev-an) WEBHOOK="${{ secrets.DISCORD_WEBHOOK_AN }}";;
            *) WEBHOOK="";;
          esac

          echo "base=$BASE" >> $GITHUB_OUTPUT
          [ -n "$WEBHOOK" ] && echo "webhook=$WEBHOOK" >> $GITHUB_OUTPUT

          # 공통 메시지 필드
          {
            echo "pr_number=${{ github.event.pull_request.number }}"
            echo "pr_title<<EOF"
            echo "${{ github.event.pull_request.title }}"
            echo "EOF"
            echo "pr_url=${{ github.event.pull_request.html_url }}"
            echo "sender=${{ github.actor }}"
            echo "action=${{ github.event.action }}"
            echo "head=${{ github.event.pull_request.head.ref }}"
          } >> $GITHUB_OUTPUT

      - name: Skip if base branch is not mapped
        if: ${{ steps.route.outputs.webhook == '' }}
        run: echo "No target webhook for base=${{ steps.route.outputs.base }}. Skipping."

      - name: Build Discord payload
        if: ${{ steps.route.outputs.webhook != '' }}
        run: |
          # 이벤트별 타이틀
          case "${{ steps.route.outputs.action }}" in
            review_requested) TITLE="🔔 Review Requested";;
            opened)            TITLE="📌 PR Opened";;
            reopened)          TITLE="📌 PR Reopened";;
            ready_for_review)  TITLE="✅ Ready for Review";;
            *)                 TITLE="PR Event";;
          esac

          DESC="**#${{ steps.route.outputs.pr_number }}** ${{ steps.route.outputs.pr_title }}
          by \`${{ steps.route.outputs.sender }}\`
          base: \`${{ steps.route.outputs.base }}\` ← head: \`${{ steps.route.outputs.head }}\`
          🔗 ${{ steps.route.outputs.pr_url }}"

          jq -n --arg t "$TITLE" --arg d "$DESC" \
            '{embeds:[{title:$t, description:$d}]}' > payload.json

      - name: Send to Discord
        if: ${{ steps.route.outputs.webhook != '' }}
        run: |
          curl -sS -X POST -H "Content-Type: application/json" \
            -d @payload.json "${{ steps.route.outputs.webhook }}"
